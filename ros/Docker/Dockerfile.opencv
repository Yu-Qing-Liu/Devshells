FROM ad-ros:latest

WORKDIR /home/trtuser

ENV DEBIAN_FRONTEND=noninteractive

SHELL ["/bin/bash", "-c"]

######################
# OPEN_CV
######################
ARG OPENCV_VERSION=4.10.0
# Look for your gpu model at https://developer.nvidia.com/cuda-gpus
# For reference Yu's gpu is the NVIDIA GeForce GTX 1650 Ti Mobile with a compute capability of 7.5. Set the cmake flag CUDA_ARCH_BIN to this value (your value for your gpu).
ARG CUDA_COMPUTE_CAPABILITY=7.5

RUN apt-get update && \
    apt-get install -y unzip

RUN cd /opt/ &&\
    # Download and unzip OpenCV and opencv_contrib and delte zip files
    wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip &&\
    unzip $OPENCV_VERSION.zip &&\
    rm $OPENCV_VERSION.zip &&\
    wget https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip &&\
    unzip ${OPENCV_VERSION}.zip &&\
    rm ${OPENCV_VERSION}.zip &&\
    # Create build folder and switch to it
    mkdir /opt/opencv-${OPENCV_VERSION}/build && cd /opt/opencv-${OPENCV_VERSION}/build &&\
    # Cmake configure
    cmake \
        -DOPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-${OPENCV_VERSION}/modules \
        -DWITH_CUDA=ON \
        -DCUDA_ARCH_BIN=${CUDA_COMPUTE_CAPABILITY} \
        -DCMAKE_BUILD_TYPE=RELEASE \
        # Install path will be /usr/local/lib (lib is implicit)
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        .. &&\
    # Make
    make -j "$(nproc)" && \
    # Install to /usr/local/lib
    sudo make install && \
    ldconfig &&\
    # Remove OpenCV sources and build folder
    rm -rf /opt/opencv-${OPENCV_VERSION} && rm -rf /opt/opencv_contrib-${OPENCV_VERSION}
